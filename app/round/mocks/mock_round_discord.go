// Code generated by MockGen. DO NOT EDIT.
// Source: ./app/round/discord/discord.go
//
// Generated by this command:
//
//	mockgen -source=./app/round/discord/discord.go -destination=./app/round/mocks/mock_round_discord.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	createround "github.com/Black-And-White-Club/discord-frolf-bot/app/round/discord/create_round"
	roundrsvp "github.com/Black-And-White-Club/discord-frolf-bot/app/round/discord/round_rsvp"
	gomock "go.uber.org/mock/gomock"
)

// MockRoundDiscordInterface is a mock of RoundDiscordInterface interface.
type MockRoundDiscordInterface struct {
	ctrl     *gomock.Controller
	recorder *MockRoundDiscordInterfaceMockRecorder
	isgomock struct{}
}

// MockRoundDiscordInterfaceMockRecorder is the mock recorder for MockRoundDiscordInterface.
type MockRoundDiscordInterfaceMockRecorder struct {
	mock *MockRoundDiscordInterface
}

// NewMockRoundDiscordInterface creates a new mock instance.
func NewMockRoundDiscordInterface(ctrl *gomock.Controller) *MockRoundDiscordInterface {
	mock := &MockRoundDiscordInterface{ctrl: ctrl}
	mock.recorder = &MockRoundDiscordInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRoundDiscordInterface) EXPECT() *MockRoundDiscordInterfaceMockRecorder {
	return m.recorder
}

// GetCreateRoundManager mocks base method.
func (m *MockRoundDiscordInterface) GetCreateRoundManager() createround.CreateRoundManager {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCreateRoundManager")
	ret0, _ := ret[0].(createround.CreateRoundManager)
	return ret0
}

// GetCreateRoundManager indicates an expected call of GetCreateRoundManager.
func (mr *MockRoundDiscordInterfaceMockRecorder) GetCreateRoundManager() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCreateRoundManager", reflect.TypeOf((*MockRoundDiscordInterface)(nil).GetCreateRoundManager))
}

// GetRoundRsvpManager mocks base method.
func (m *MockRoundDiscordInterface) GetRoundRsvpManager() roundrsvp.RoundRsvpManager {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRoundRsvpManager")
	ret0, _ := ret[0].(roundrsvp.RoundRsvpManager)
	return ret0
}

// GetRoundRsvpManager indicates an expected call of GetRoundRsvpManager.
func (mr *MockRoundDiscordInterfaceMockRecorder) GetRoundRsvpManager() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRoundRsvpManager", reflect.TypeOf((*MockRoundDiscordInterface)(nil).GetRoundRsvpManager))
}
