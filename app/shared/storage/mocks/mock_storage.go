// Code generated by MockGen. DO NOT EDIT.
// Source: ./app/shared/storage/storage.go
//
// Generated by this command:
//
//	mockgen -source=./app/shared/storage/storage.go -destination=./app/shared/storage/mocks/mock_storage.go -package=storagemocks
//

// Package storagemocks is a generated GoMock package.
package storagemocks

import (
	reflect "reflect"
	time "time"

	gomock "go.uber.org/mock/gomock"
)

// MockISInterface is a mock of ISInterface interface.
type MockISInterface struct {
	ctrl     *gomock.Controller
	recorder *MockISInterfaceMockRecorder
	isgomock struct{}
}

// MockISInterfaceMockRecorder is the mock recorder for MockISInterface.
type MockISInterfaceMockRecorder struct {
	mock *MockISInterface
}

// NewMockISInterface creates a new mock instance.
func NewMockISInterface(ctrl *gomock.Controller) *MockISInterface {
	mock := &MockISInterface{ctrl: ctrl}
	mock.recorder = &MockISInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockISInterface) EXPECT() *MockISInterfaceMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockISInterface) Delete(correlationID string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Delete", correlationID)
}

// Delete indicates an expected call of Delete.
func (mr *MockISInterfaceMockRecorder) Delete(correlationID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockISInterface)(nil).Delete), correlationID)
}

// Get mocks base method.
func (m *MockISInterface) Get(correlationID string) (any, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", correlationID)
	ret0, _ := ret[0].(any)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockISInterfaceMockRecorder) Get(correlationID any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockISInterface)(nil).Get), correlationID)
}

// Set mocks base method.
func (m *MockISInterface) Set(correlationID string, interaction any, ttl time.Duration) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", correlationID, interaction, ttl)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockISInterfaceMockRecorder) Set(correlationID, interaction, ttl any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockISInterface)(nil).Set), correlationID, interaction, ttl)
}
