// Code generated by MockGen. DO NOT EDIT.
// Source: ./app/user/discord/discord.go
//
// Generated by this command:
//
//	mockgen -source=./app/user/discord/discord.go -destination=./app/user/mocks/mock_user_discord.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	role "github.com/Black-And-White-Club/discord-frolf-bot/app/user/discord/role"
	signup "github.com/Black-And-White-Club/discord-frolf-bot/app/user/discord/signup"
	gomock "go.uber.org/mock/gomock"
)

// MockUserDiscordInterface is a mock of UserDiscordInterface interface.
type MockUserDiscordInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUserDiscordInterfaceMockRecorder
	isgomock struct{}
}

// MockUserDiscordInterfaceMockRecorder is the mock recorder for MockUserDiscordInterface.
type MockUserDiscordInterfaceMockRecorder struct {
	mock *MockUserDiscordInterface
}

// NewMockUserDiscordInterface creates a new mock instance.
func NewMockUserDiscordInterface(ctrl *gomock.Controller) *MockUserDiscordInterface {
	mock := &MockUserDiscordInterface{ctrl: ctrl}
	mock.recorder = &MockUserDiscordInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserDiscordInterface) EXPECT() *MockUserDiscordInterfaceMockRecorder {
	return m.recorder
}

// GetRoleManager mocks base method.
func (m *MockUserDiscordInterface) GetRoleManager() role.RoleManager {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRoleManager")
	ret0, _ := ret[0].(role.RoleManager)
	return ret0
}

// GetRoleManager indicates an expected call of GetRoleManager.
func (mr *MockUserDiscordInterfaceMockRecorder) GetRoleManager() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRoleManager", reflect.TypeOf((*MockUserDiscordInterface)(nil).GetRoleManager))
}

// GetSignupManager mocks base method.
func (m *MockUserDiscordInterface) GetSignupManager() signup.SignupManager {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSignupManager")
	ret0, _ := ret[0].(signup.SignupManager)
	return ret0
}

// GetSignupManager indicates an expected call of GetSignupManager.
func (mr *MockUserDiscordInterfaceMockRecorder) GetSignupManager() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSignupManager", reflect.TypeOf((*MockUserDiscordInterface)(nil).GetSignupManager))
}
