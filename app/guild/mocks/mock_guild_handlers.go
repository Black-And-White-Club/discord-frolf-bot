// Code generated by MockGen. DO NOT EDIT.
// Source: ./app/guild/watermill/handlers/handlers.go
//
// Generated by this command:
//
//	mockgen -source=./app/guild/watermill/handlers/handlers.go -destination=./app/guild/mocks/mock_guild_handlers.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	message "github.com/ThreeDotsLabs/watermill/message"
	gomock "go.uber.org/mock/gomock"
)

// MockHandlers is a mock of Handlers interface.
type MockHandlers struct {
	ctrl     *gomock.Controller
	recorder *MockHandlersMockRecorder
	isgomock struct{}
}

// MockHandlersMockRecorder is the mock recorder for MockHandlers.
type MockHandlersMockRecorder struct {
	mock *MockHandlers
}

// NewMockHandlers creates a new mock instance.
func NewMockHandlers(ctrl *gomock.Controller) *MockHandlers {
	mock := &MockHandlers{ctrl: ctrl}
	mock.recorder = &MockHandlersMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockHandlers) EXPECT() *MockHandlersMockRecorder {
	return m.recorder
}

// HandleGuildConfigCreated mocks base method.
func (m *MockHandlers) HandleGuildConfigCreated(msg *message.Message) ([]*message.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleGuildConfigCreated", msg)
	ret0, _ := ret[0].([]*message.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HandleGuildConfigCreated indicates an expected call of HandleGuildConfigCreated.
func (mr *MockHandlersMockRecorder) HandleGuildConfigCreated(msg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleGuildConfigCreated", reflect.TypeOf((*MockHandlers)(nil).HandleGuildConfigCreated), msg)
}

// HandleGuildConfigCreationFailed mocks base method.
func (m *MockHandlers) HandleGuildConfigCreationFailed(msg *message.Message) ([]*message.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleGuildConfigCreationFailed", msg)
	ret0, _ := ret[0].([]*message.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HandleGuildConfigCreationFailed indicates an expected call of HandleGuildConfigCreationFailed.
func (mr *MockHandlersMockRecorder) HandleGuildConfigCreationFailed(msg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleGuildConfigCreationFailed", reflect.TypeOf((*MockHandlers)(nil).HandleGuildConfigCreationFailed), msg)
}

// HandleGuildConfigDeleted mocks base method.
func (m *MockHandlers) HandleGuildConfigDeleted(msg *message.Message) ([]*message.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleGuildConfigDeleted", msg)
	ret0, _ := ret[0].([]*message.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HandleGuildConfigDeleted indicates an expected call of HandleGuildConfigDeleted.
func (mr *MockHandlersMockRecorder) HandleGuildConfigDeleted(msg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleGuildConfigDeleted", reflect.TypeOf((*MockHandlers)(nil).HandleGuildConfigDeleted), msg)
}

// HandleGuildConfigDeletionFailed mocks base method.
func (m *MockHandlers) HandleGuildConfigDeletionFailed(msg *message.Message) ([]*message.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleGuildConfigDeletionFailed", msg)
	ret0, _ := ret[0].([]*message.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HandleGuildConfigDeletionFailed indicates an expected call of HandleGuildConfigDeletionFailed.
func (mr *MockHandlersMockRecorder) HandleGuildConfigDeletionFailed(msg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleGuildConfigDeletionFailed", reflect.TypeOf((*MockHandlers)(nil).HandleGuildConfigDeletionFailed), msg)
}

// HandleGuildConfigRetrievalFailed mocks base method.
func (m *MockHandlers) HandleGuildConfigRetrievalFailed(msg *message.Message) ([]*message.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleGuildConfigRetrievalFailed", msg)
	ret0, _ := ret[0].([]*message.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HandleGuildConfigRetrievalFailed indicates an expected call of HandleGuildConfigRetrievalFailed.
func (mr *MockHandlersMockRecorder) HandleGuildConfigRetrievalFailed(msg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleGuildConfigRetrievalFailed", reflect.TypeOf((*MockHandlers)(nil).HandleGuildConfigRetrievalFailed), msg)
}

// HandleGuildConfigRetrieved mocks base method.
func (m *MockHandlers) HandleGuildConfigRetrieved(msg *message.Message) ([]*message.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleGuildConfigRetrieved", msg)
	ret0, _ := ret[0].([]*message.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HandleGuildConfigRetrieved indicates an expected call of HandleGuildConfigRetrieved.
func (mr *MockHandlersMockRecorder) HandleGuildConfigRetrieved(msg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleGuildConfigRetrieved", reflect.TypeOf((*MockHandlers)(nil).HandleGuildConfigRetrieved), msg)
}

// HandleGuildConfigUpdateFailed mocks base method.
func (m *MockHandlers) HandleGuildConfigUpdateFailed(msg *message.Message) ([]*message.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleGuildConfigUpdateFailed", msg)
	ret0, _ := ret[0].([]*message.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HandleGuildConfigUpdateFailed indicates an expected call of HandleGuildConfigUpdateFailed.
func (mr *MockHandlersMockRecorder) HandleGuildConfigUpdateFailed(msg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleGuildConfigUpdateFailed", reflect.TypeOf((*MockHandlers)(nil).HandleGuildConfigUpdateFailed), msg)
}

// HandleGuildConfigUpdated mocks base method.
func (m *MockHandlers) HandleGuildConfigUpdated(msg *message.Message) ([]*message.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleGuildConfigUpdated", msg)
	ret0, _ := ret[0].([]*message.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HandleGuildConfigUpdated indicates an expected call of HandleGuildConfigUpdated.
func (mr *MockHandlersMockRecorder) HandleGuildConfigUpdated(msg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleGuildConfigUpdated", reflect.TypeOf((*MockHandlers)(nil).HandleGuildConfigUpdated), msg)
}

// HandleGuildSetupRequest mocks base method.
func (m *MockHandlers) HandleGuildSetupRequest(msg *message.Message) ([]*message.Message, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "HandleGuildSetupRequest", msg)
	ret0, _ := ret[0].([]*message.Message)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// HandleGuildSetupRequest indicates an expected call of HandleGuildSetupRequest.
func (mr *MockHandlersMockRecorder) HandleGuildSetupRequest(msg any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "HandleGuildSetupRequest", reflect.TypeOf((*MockHandlers)(nil).HandleGuildSetupRequest), msg)
}
