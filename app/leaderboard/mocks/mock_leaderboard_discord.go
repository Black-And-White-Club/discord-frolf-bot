// Code generated by MockGen. DO NOT EDIT.
// Source: ./app/leaderboard/discord/discord.go
//
// Generated by this command:
//
//	mockgen -source=./app/leaderboard/discord/discord.go -destination=./app/leaderboard/mocks/mock_leaderboard_discord.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	leaderboardupdated "github.com/Black-And-White-Club/discord-frolf-bot/app/leaderboard/discord/leaderboard_updated"
	gomock "go.uber.org/mock/gomock"
)

// MockLeaderboardDiscordInterface is a mock of LeaderboardDiscordInterface interface.
type MockLeaderboardDiscordInterface struct {
	ctrl     *gomock.Controller
	recorder *MockLeaderboardDiscordInterfaceMockRecorder
	isgomock struct{}
}

// MockLeaderboardDiscordInterfaceMockRecorder is the mock recorder for MockLeaderboardDiscordInterface.
type MockLeaderboardDiscordInterfaceMockRecorder struct {
	mock *MockLeaderboardDiscordInterface
}

// NewMockLeaderboardDiscordInterface creates a new mock instance.
func NewMockLeaderboardDiscordInterface(ctrl *gomock.Controller) *MockLeaderboardDiscordInterface {
	mock := &MockLeaderboardDiscordInterface{ctrl: ctrl}
	mock.recorder = &MockLeaderboardDiscordInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLeaderboardDiscordInterface) EXPECT() *MockLeaderboardDiscordInterfaceMockRecorder {
	return m.recorder
}

// GetLeaderboardUpdateManager mocks base method.
func (m *MockLeaderboardDiscordInterface) GetLeaderboardUpdateManager() leaderboardupdated.LeaderboardUpdateManager {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLeaderboardUpdateManager")
	ret0, _ := ret[0].(leaderboardupdated.LeaderboardUpdateManager)
	return ret0
}

// GetLeaderboardUpdateManager indicates an expected call of GetLeaderboardUpdateManager.
func (mr *MockLeaderboardDiscordInterfaceMockRecorder) GetLeaderboardUpdateManager() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLeaderboardUpdateManager", reflect.TypeOf((*MockLeaderboardDiscordInterface)(nil).GetLeaderboardUpdateManager))
}
